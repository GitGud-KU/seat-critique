var search_data = {"index":{"searchIndex":["activerecord","activesupport","testcase","addbuildingidtobathrooms","applicationcable","channel","connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","bathroom","bathroomtest","bathroomscontroller","bathroomscontrollertest","bathroomshelper","building","buildingtest","buildingscontroller","buildingscontrollertest","buildingshelper","bundler","createbathrooms","createbuildings","createcritiques","critique","critiquetest","critiquescontroller","critiquescontrollertest","critiqueshelper","devisecreateusers","logger","object","seatcritique","application","user","usertest","address_must_exist()","address_must_exist2()","bathroom_params()","building_params()","change()","change()","change()","change()","change()","create()","create()","create()","critique_params()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit_valid_name()","format_input()","gender_options()","get_building()","get_building_and_bathroom()","in_range()","index()","index()","index()","is_number?()","name_cannot_be_bad()","new()","new()","new()","show()","show()","show()","strip_input()","system!()","unify_gender()","update()","update()","update()","valid_floor()","validate_location()","dockerfile","gemfile","gemfile.lock","readme","rakefile","manifest.js","application.js","bathrooms.coffee","buildings.coffee","cable.js","critiques.coffee","application.scss","bathrooms.scss","buildings.scss","critiques.scss","forms.scss","edit.html.haml","index.html.haml","new.html.haml","show.html.haml","edit.html.haml","index.html.haml","new.html.haml","show.html.haml","edit.html.haml","index.html.haml","new.html.haml","show.html.haml","config.ru","development.log","test.log","404.html","422.html","500.html","apple-touch-icon-precomposed.png","apple-touch-icon.png","favicon.ico","robots","server.pid","restart"],"longSearchIndex":["activerecord","activesupport","activesupport::testcase","addbuildingidtobathrooms","applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","bathroom","bathroomtest","bathroomscontroller","bathroomscontrollertest","bathroomshelper","building","buildingtest","buildingscontroller","buildingscontrollertest","buildingshelper","bundler","createbathrooms","createbuildings","createcritiques","critique","critiquetest","critiquescontroller","critiquescontrollertest","critiqueshelper","devisecreateusers","logger","object","seatcritique","seatcritique::application","user","usertest","building#address_must_exist()","building#address_must_exist2()","bathroomscontroller#bathroom_params()","buildingscontroller#building_params()","addbuildingidtobathrooms#change()","createbathrooms#change()","createbuildings#change()","createcritiques#change()","devisecreateusers#change()","bathroomscontroller#create()","buildingscontroller#create()","critiquescontroller#create()","critiquescontroller#critique_params()","bathroomscontroller#destroy()","buildingscontroller#destroy()","critiquescontroller#destroy()","bathroomscontroller#edit()","buildingscontroller#edit()","critiquescontroller#edit()","building#edit_valid_name()","bathroom#format_input()","bathroom#gender_options()","bathroomscontroller#get_building()","critiquescontroller#get_building_and_bathroom()","critique#in_range()","bathroomscontroller#index()","buildingscontroller#index()","critiquescontroller#index()","bathroom#is_number?()","building#name_cannot_be_bad()","bathroomscontroller#new()","buildingscontroller#new()","critiquescontroller#new()","bathroomscontroller#show()","buildingscontroller#show()","critiquescontroller#show()","building#strip_input()","object#system!()","bathroom#unify_gender()","bathroomscontroller#update()","buildingscontroller#update()","critiquescontroller#update()","bathroom#valid_floor()","bathroom#validate_location()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveRecord","","classes/ActiveRecord.html","",""],["ActiveSupport","","classes/ActiveSupport.html","",""],["ActiveSupport::TestCase","","classes/ActiveSupport/TestCase.html","",""],["AddBuildingIdToBathrooms","","classes/AddBuildingIdToBathrooms.html","",""],["ApplicationCable","","classes/ApplicationCable.html","",""],["ApplicationCable::Channel","","classes/ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","classes/ApplicationCable/Connection.html","",""],["ApplicationController","","classes/ApplicationController.html","",""],["ApplicationHelper","","classes/ApplicationHelper.html","",""],["ApplicationJob","","classes/ApplicationJob.html","",""],["ApplicationMailer","","classes/ApplicationMailer.html","",""],["ApplicationRecord","","classes/ApplicationRecord.html","",""],["Bathroom","","classes/Bathroom.html","",""],["BathroomTest","","classes/BathroomTest.html","",""],["BathroomsController","","classes/BathroomsController.html","",""],["BathroomsControllerTest","","classes/BathroomsControllerTest.html","",""],["BathroomsHelper","","classes/BathroomsHelper.html","",""],["Building","","classes/Building.html","",""],["BuildingTest","","classes/BuildingTest.html","",""],["BuildingsController","","classes/BuildingsController.html","",""],["BuildingsControllerTest","","classes/BuildingsControllerTest.html","",""],["BuildingsHelper","","classes/BuildingsHelper.html","",""],["Bundler","","classes/Bundler.html","",""],["CreateBathrooms","","classes/CreateBathrooms.html","",""],["CreateBuildings","","classes/CreateBuildings.html","",""],["CreateCritiques","","classes/CreateCritiques.html","",""],["Critique","","classes/Critique.html","",""],["CritiqueTest","","classes/CritiqueTest.html","",""],["CritiquesController","","classes/CritiquesController.html","",""],["CritiquesControllerTest","","classes/CritiquesControllerTest.html","",""],["CritiquesHelper","","classes/CritiquesHelper.html","",""],["DeviseCreateUsers","","classes/DeviseCreateUsers.html","",""],["Logger","","classes/Logger.html","",""],["Object","","classes/Object.html","",""],["SeatCritique","","classes/SeatCritique.html","",""],["SeatCritique::Application","","classes/SeatCritique/Application.html","",""],["User","","classes/User.html","",""],["UserTest","","classes/UserTest.html","",""],["address_must_exist","Building","classes/Building.html#method-i-address_must_exist","()","<p>make sure address is not empty\n"],["address_must_exist2","Building","classes/Building.html#method-i-address_must_exist2","()","<p>For some reason, validation doesn&#39;t work when two validators call the\nsame method. So, this simply …\n"],["bathroom_params","BathroomsController","classes/BathroomsController.html#method-i-bathroom_params","()",""],["building_params","BuildingsController","classes/BuildingsController.html#method-i-building_params","()",""],["change","AddBuildingIdToBathrooms","classes/AddBuildingIdToBathrooms.html#method-i-change","()",""],["change","CreateBathrooms","classes/CreateBathrooms.html#method-i-change","()",""],["change","CreateBuildings","classes/CreateBuildings.html#method-i-change","()",""],["change","CreateCritiques","classes/CreateCritiques.html#method-i-change","()",""],["change","DeviseCreateUsers","classes/DeviseCreateUsers.html#method-i-change","()",""],["create","BathroomsController","classes/BathroomsController.html#method-i-create","()",""],["create","BuildingsController","classes/BuildingsController.html#method-i-create","()",""],["create","CritiquesController","classes/CritiquesController.html#method-i-create","()",""],["critique_params","CritiquesController","classes/CritiquesController.html#method-i-critique_params","()",""],["destroy","BathroomsController","classes/BathroomsController.html#method-i-destroy","()",""],["destroy","BuildingsController","classes/BuildingsController.html#method-i-destroy","()",""],["destroy","CritiquesController","classes/CritiquesController.html#method-i-destroy","()",""],["edit","BathroomsController","classes/BathroomsController.html#method-i-edit","()",""],["edit","BuildingsController","classes/BuildingsController.html#method-i-edit","()",""],["edit","CritiquesController","classes/CritiquesController.html#method-i-edit","()",""],["edit_valid_name","Building","classes/Building.html#method-i-edit_valid_name","()","<p>when editing a building, the name can be the old name, but no other names\nin the database. We check that …\n"],["format_input","Bathroom","classes/Bathroom.html#method-i-format_input","()","<p>removes spaces, tabs, etc from beginning and end of input\n"],["gender_options","Bathroom","classes/Bathroom.html#method-i-gender_options","()","<p>Forces gender to be from a prespecified set of allowed inputs Validation\nmakes sure it&#39;s on this …\n"],["get_building","BathroomsController","classes/BathroomsController.html#method-i-get_building","()",""],["get_building_and_bathroom","CritiquesController","classes/CritiquesController.html#method-i-get_building_and_bathroom","()",""],["in_range","Critique","classes/Critique.html#method-i-in_range","()","<p>Simple forms will validate that only integers are accepted We do not need\nto check for that.\n"],["index","BathroomsController","classes/BathroomsController.html#method-i-index","()",""],["index","BuildingsController","classes/BuildingsController.html#method-i-index","()",""],["index","CritiquesController","classes/CritiquesController.html#method-i-index","()",""],["is_number?","Bathroom","classes/Bathroom.html#method-i-is_number-3F","(obj)",""],["name_cannot_be_bad","Building","classes/Building.html#method-i-name_cannot_be_bad","()","<p>makes sure building name is not empty, and name is unique\n"],["new","BathroomsController","classes/BathroomsController.html#method-i-new","()",""],["new","BuildingsController","classes/BuildingsController.html#method-i-new","()",""],["new","CritiquesController","classes/CritiquesController.html#method-i-new","()",""],["show","BathroomsController","classes/BathroomsController.html#method-i-show","()",""],["show","BuildingsController","classes/BuildingsController.html#method-i-show","()",""],["show","CritiquesController","classes/CritiquesController.html#method-i-show","()",""],["strip_input","Building","classes/Building.html#method-i-strip_input","()","<p>removes spaces, tabs, etc from beginning and end of input\n"],["system!","Object","classes/Object.html#method-i-system-21","(*args)",""],["unify_gender","Bathroom","classes/Bathroom.html#method-i-unify_gender","()","<p>Converts all allowable gender inputs into either &#39;Male&#39; or\n&#39;Female&#39;\n"],["update","BathroomsController","classes/BathroomsController.html#method-i-update","()",""],["update","BuildingsController","classes/BuildingsController.html#method-i-update","()",""],["update","CritiquesController","classes/CritiquesController.html#method-i-update","()",""],["valid_floor","Bathroom","classes/Bathroom.html#method-i-valid_floor","()",""],["validate_location","Bathroom","classes/Bathroom.html#method-i-validate_location","()",""],["Dockerfile","","files/Dockerfile.html","","<p>FROM ruby:2.3.3 RUN apt-get update -qq &amp;&amp; apt-get install -y\nbuild-essential libpq-dev nodejs …\n"],["Gemfile","","files/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Bundle edge Rails instead: gem &#39;rails&#39;, github:\n&#39;rails/rails&#39; …\n"],["Gemfile.lock","","files/Gemfile_lock.html","","<p>GEM\n\n<pre><code>remote: https://rubygems.org/\nspecs:\n  actioncable (5.0.0.1)\n    actionpack (= 5.0.0.1)\n    nio4r ...</code></pre>\n"],["README","","files/README_md.html","","<p>Seat Critique\n<p>Seat Critique is an all-in-one restroom app which lets users find and\ncritique restrooms …\n"],["Rakefile","","files/Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["manifest.js","","files/app/assets/config/manifest_js.html","","<p>//= link_tree ../images //= link_directory ../javascripts .js //=\nlink_directory ../stylesheets .css …\n"],["application.js","","files/app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["bathrooms.coffee","","files/app/assets/javascripts/bathrooms_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["buildings.coffee","","files/app/assets/javascripts/buildings_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["cable.js","","files/app/assets/javascripts/cable_js.html","","<p>// Action Cable provides the framework to deal with WebSockets in Rails. //\nYou can generate new channels …\n"],["critiques.coffee","","files/app/assets/javascripts/critiques_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.scss","","files/app/assets/stylesheets/application_scss.html","","\n<pre><code>  This is a manifest file that&#39;ll be compiled into application.css, which will include all the files ...</code></pre>\n"],["bathrooms.scss","","files/app/assets/stylesheets/bathrooms_scss.html","","<p>// Place all the styles related to the Bathrooms controller here. // They\nwill automatically be included …\n"],["buildings.scss","","files/app/assets/stylesheets/buildings_scss.html","","<p>// Place all the styles related to the Buildings controller here. // They\nwill automatically be included …\n"],["critiques.scss","","files/app/assets/stylesheets/critiques_scss.html","","<p>// Place all the styles related to the Critiques controller here. // They\nwill automatically be included …\n"],["forms.scss","","files/app/assets/stylesheets/forms_scss.html","","<p>//Sourced from\ngithub.com/plataformatec/simple_form/wiki/CSS-for-simple_form\n<p>.simple_form {\n\n<pre><code>div.input { ...</code></pre>\n"],["edit.html.haml","","files/app/views/bathrooms/edit_html_haml.html","","<p>.container\n\n<pre><code>%h1 Bathrooms#edit\n%h2 Building: #{@building.name}\n\n- if @bathroom.errors.any?\n  %h3\n    = ...</code></pre>\n"],["index.html.haml","","files/app/views/bathrooms/index_html_haml.html","","<p>.container\n\n<pre><code>%h1 Bathrooms\n%h2 Building: #{@building.name}\n\n= link_to &quot;Create New Bathroom&quot;, new_building_bathroom_path(@building), ...</code></pre>\n"],["new.html.haml","","files/app/views/bathrooms/new_html_haml.html","","<p>.container\n\n<pre><code>%h1 Bathrooms#new\n%h2 Building: #{@building.name}\n\n- if @bathroom.errors.any?\n  %h3\n    = pluralize(@bathroom.errors.count, ...</code></pre>\n"],["show.html.haml","","files/app/views/bathrooms/show_html_haml.html","","<p>.container\n\n<pre><code>%h1 Bathroom\n%h2 Building: #{@building.name}\n\n.well.well-sm\n\n  %h3 Gender\n  = @bathroom.gender ...</code></pre>\n"],["edit.html.haml","","files/app/views/buildings/edit_html_haml.html","","<p>.container\n\n<pre><code>%h1 Edit Building\n\n- if @building.errors.any?\n  %h3\n    = pluralize(@building.errors.count, ...</code></pre>\n"],["index.html.haml","","files/app/views/buildings/index_html_haml.html","","<p>.container\n\n<pre><code>%h1 Buildings\n\n= link_to &quot;Create New Building&quot;, new_building_path, :class =&gt; &#39;btn btn-primary&#39; ...</code></pre>\n"],["new.html.haml","","files/app/views/buildings/new_html_haml.html","","<p>.container\n\n<pre><code>%h1 New Building\n\n- if @building.errors.any?\n  %h3\n    = pluralize(@building.errors.count, ...</code></pre>\n"],["show.html.haml","","files/app/views/buildings/show_html_haml.html","","<p>.container\n\n<pre><code>%h1\n  = @building.name\n\n%h3 Address\n= @building.address\n\n.separator\n/%br\n/= link_to &quot;Bathrooms&quot;, ...</code></pre>\n"],["edit.html.haml","","files/app/views/critiques/edit_html_haml.html","","<p>.container\n\n<pre><code>%h1 Critiques#edit\n%h2 Building: #{@building.name}\n%h3 Bathroom: Floor #{@bathroom.floor} at ...</code></pre>\n"],["index.html.haml","","files/app/views/critiques/index_html_haml.html","","<p>.container\n\n<pre><code>%h1 Critiques\n%h3 Building: #{@building.name}\n%h3 Bathroom: Floor #{@bathroom.floor} at #{@bathroom.location} ...</code></pre>\n"],["new.html.haml","","files/app/views/critiques/new_html_haml.html","","<p>.container\n\n<pre><code>%h1 Critiques#new\n%h2 Building: #{@building.name}\n%h3 Bathroom: Floor #{@bathroom.floor} at ...</code></pre>\n"],["show.html.haml","","files/app/views/critiques/show_html_haml.html","","<p>.container\n\n<pre><code>%h1 Critiques#show\n%h2 Building: #{@building.name}\n%h3 Bathroom: Floor #{@bathroom.floor} at ...</code></pre>\n"],["config.ru","","files/config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative &#39;config/environment&#39; …\n"],["development.log","","files/log/development_log.html","","<p>Started GET “/” for 172.18.0.1 at 2017-10-25 00:25:48 +0000 Cannot render\nconsole from 172.18.0.1 …\n"],["test.log","","files/log/test_log.html","","\n<pre><code>\u001b[1m\u001b[35m (117.9ms)\u001b[0m  \u001b[1m\u001b[35mDROP DATABASE IF EXISTS &quot;seatcritique_test&quot;\u001b[0m\n\u001b[1m\u001b[35m (334.2ms)\u001b[0m ...</code></pre>\n"],["404.html","","files/public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</code></pre>\n"],["422.html","","files/public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</code></pre>\n"],["500.html","","files/public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</code></pre>\n"],["apple-touch-icon-precomposed.png","","files/public/apple-touch-icon-precomposed_png.html","",""],["apple-touch-icon.png","","files/public/apple-touch-icon_png.html","",""],["favicon.ico","","files/public/favicon_ico.html","",""],["robots","","files/public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n<p>To ban all spiders …\n"],["server.pid","","files/tmp/pids/server_pid.html","","<p>1\n"],["restart","","files/tmp/restart_txt.html","",""]]}}